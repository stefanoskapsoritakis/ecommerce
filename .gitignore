### Ignore unnecessary files in backend
.fake
*.http

# User-specific files
backend/appsettings.json
backend/appsettings.*.json
backend/obj/
backend/bin/
backend/.vscode/
backend/WebApi.Core/obj/
backend/WebApi.Core/bin/
backend/WebApi.Core/.vscode/
backend/WebApi.Business/obj/
backend/WebApi.Business/bin/
backend/WebApi.Business/.vscode/
backend/WebApi.Controller/obj/
backend/WebApi.Controller/bin/
backend/WebApi.Controller/.vscode/
backend/WebApi.WebApi/obj/
backend/WebApi.WebApi/bin/
backend/WebApi.WebApi/.vscode/
backend/WebApi.Test/obj/
backend/WebApi.Test/bin/
backend/WebApi.Test/.vscode/

# Visual Studio 2015/2017 cache/options directory
.vs/
.vscode/

# .NET
project.lock.json
project.fragment.lock.json
artifacts/

# Files built by Visual Studio
*_i.c
*_p.c
*_h.h
*.ilk
*.meta
*.obj
*.iobj
*.pch
*.pdb
*.ipdb
*.pgc
*.pgd
*.rsp
*.sbr
*.tlb
*.tli
*.tlh
*.tmp
*.tmp_proj
*_wpftmp.csproj
*.log
*.tlog
*.vspscc
*.vssscc
.builds
*.pidb
*.svclog
*.scc

# Visual Studio code coverage results
*.coverage
*.coveragexml

# NuGet Packages
*.nupkg
# NuGet Symbol Packages
*.snupkg
# The packages folder can be ignored because of Package Restore
**/[Pp]ackages/*
# except build/, which is used as an MSBuild target.
!**/[Pp]ackages/build/
# Uncomment if necessary however generally it will be regenerated when needed
#!**/[Pp]ackages/repositories.config
# NuGet v3's project.json files produces more ignorable files
*.nuget.props
*.nuget.targets


### Ignore unnecessary files in frontend

# dependencies
frontend/node_modules

# testing
frontend/coverage

# production
frontend/build

# env files
frontend/.env

frontend/npm-debug.log*
frontend/yarn-debug.log*
frontend/yarn-error.log*
frontend/yarn.lock
frontend/package-*.json

# VS Code files for those working on multiple tools
.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
*.code-workspace

# Local History for Visual Studio Code
.history/

# General
.DS_Store
.AppleDouble
.LSOverride
